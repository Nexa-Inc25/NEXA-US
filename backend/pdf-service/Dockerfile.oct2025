# Use Python 3.12-slim for consistency with local environment
FROM python:3.12-slim

# Install system dependencies (including Tesseract for OCR)
RUN apt-get update && apt-get install -y \
    build-essential \
    tesseract-ocr \
    tesseract-ocr-eng \
    libtesseract-dev \
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    curl \
    libopenblas-dev \
    libjpeg-dev \
    zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# Create data directory as root and set permissions
RUN mkdir -p /data/secure_uploads /data/quarantine /data/audit_logs && chmod -R 755 /data

# Create non-root user for security
RUN useradd -m -u 1000 user && chown -R user:user /data
USER user
ENV HOME=/home/user \
    PATH=/home/user/.local/bin:$PATH

# CPU Performance optimization environment variables
ENV PYTORCH_ENABLE_MPS_FALLBACK=1 \
    KMP_AFFINITY=granularity=fine,compact,1,0 \
    KMP_BLOCKTIME=0 \
    DNNL_VERBOSE=0 \
    MKL_DYNAMIC=FALSE

# Set working directory
WORKDIR $HOME/app

# Install Python dependencies (context is already backend/pdf-service)
COPY requirements_oct2025_fixed.txt .
RUN pip install --no-cache-dir -r requirements_oct2025_fixed.txt --user && \
    python -c "import nltk; nltk.download('punkt', quiet=True)" && \
    python -c "import nltk; nltk.download('punkt_tab', quiet=True)" || true

# Copy app code (all files from context)
COPY --chown=user . $HOME/app

# Switch back to root to copy model and CSVs to /data
USER root
RUN if [ -f /home/user/app/pole_training/utility_pole_v1/weights/best.pt ]; then \
        cp /home/user/app/pole_training/utility_pole_v1/weights/best.pt /data/yolo_pole.pt && \
        chown user:user /data/yolo_pole.pt && \
        echo "✅ Trained model (93.2% mAP) copied to /data/yolo_pole.pt"; \
    else \
        echo "⚠️ Trained model not found, will use base model"; \
    fi

# Copy pricing CSVs to /data
RUN if [ -f /home/user/app/ibew1245_labor_rates_2025.csv ]; then \
        cp /home/user/app/ibew1245_labor_rates_2025.csv /data/ && \
        cp /home/user/app/pge_equipment_rates_2025.csv /data/ && \
        chown user:user /data/*.csv && \
        echo "✅ Pricing CSVs copied to /data/"; \
    else \
        echo "⚠️ Pricing CSVs not found"; \
    fi
# Switch back to non-root user
USER user

# Expose Render default port
EXPOSE 8000

# Health check for Render
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Run with uvicorn using Render's PORT environment variable
CMD sh -c "uvicorn app_oct2025_enhanced:app --host 0.0.0.0 --port ${PORT:-8000} --workers 1"
