# Production Dockerfile for NEXA API on Render.com
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies including Tesseract for OCR
RUN apt-get update && apt-get install -y \
    build-essential \
    tesseract-ocr \
    tesseract-ocr-eng \
    postgresql-client \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY backend/pdf-service/requirements_oct2025.txt .

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements_oct2025.txt

# Download NLTK data if needed
RUN python -c "import nltk; nltk.download('punkt', quiet=True)" || true

# Copy application code
COPY backend/pdf-service/app_oct2025_enhanced.py .
COPY backend/pdf-service/middleware.py .

# Create temp directory for file uploads
RUN mkdir -p /tmp

# Create data directory for persistent storage (BEFORE switching user)
RUN mkdir -p /data && chmod 755 /data

# Create non-root user for security
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app /tmp /data
USER appuser

# The PORT environment variable is set by Render
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Start FastAPI application using PORT from environment
CMD ["sh", "-c", "uvicorn app_oct2025_enhanced:app --host 0.0.0.0 --port ${PORT:-8000} --workers 1"]
