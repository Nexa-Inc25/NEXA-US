# Server
PORT=4000
NODE_ENV=development

# Auth (set AUTH_DISABLED=1 for local dev bypass)
AUTH_DISABLED=1
AUTH0_DOMAIN=your-tenant.us.auth0.com
AUTH0_AUDIENCE=https://api.nexa.local
AUTH0_ISSUER_URL=https://your-tenant.us.auth0.com/
AUTH0_JWKS_URI=https://your-tenant.us.auth0.com/.well-known/jwks.json
# Multiple keys supported (comma-separated). Namespaced fallbacks included.
ORG_ID_CLAIM=org_id,https://nexa.app/org_id
ROLES_CLAIM=roles,https://nexa.app/roles

# Rate limiting
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX=200
# Route-specific overrides (optional)
RATE_LIMIT_WINDOW_MS_SYNC=60000
RATE_LIMIT_MAX_SYNC=120
RATE_LIMIT_WINDOW_MS_PRESIGN=60000
RATE_LIMIT_MAX_PRESIGN=30

# AWS / Presign (stubbed for local dev)
AWS_REGION=us-west-2
S3_BUCKET=nexa-mvp-uploads
# Optional: if using LocalStack for S3, set endpoint and path-style
AWS_S3_ENDPOINT=http://localhost:4566
S3_FORCE_PATH_STYLE=1
# Optional server-side encryption with KMS
S3_KMS_KEY_ID=arn:aws:kms:us-west-2:123456789012:key/abc-123
# Upload constraints
PRESIGN_MAX_MB=25
PRESIGN_ALLOWED_TYPES=image/jpeg,image/png

# Postgres pool tuning
PGPOOL_MAX=10
PGPOOL_IDLE_MS=30000
PGPOOL_CONN_TIMEOUT_MS=5000

# Local services
# Postgres: docker-compose brings up postgres on localhost:5432 with user/password/db "nexa"/"nexa"/"nexa_mvp"
DATABASE_URL=postgres://nexa:nexa@localhost:5432/nexa_mvp
# Redis: docker-compose brings up redis on localhost:6379
REDIS_URL=redis://localhost:6379
